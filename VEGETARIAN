import streamlit as st

# Ganti dengan direct image URL kamu
background_url = "https://i.ibb.co.com/xqwsXfq8/IMG-0774.jpg"

st.markdown(
    f"""
    <style>
    .stApp {{
        background-image: url("{background_url}");
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        background-attachment: fixed;
    }}
    </style>
    """,
    unsafe_allow_html=True
)
# ---------- SESSION STATE UNTUK NAVIGASI ----------
if 'page' not in st.session_state:
    st.session_state.page = 0

# ---------- HALAMAN-HALAMAN ----------
def halaman_1():
    st.markdown(
        """
        <h1 style="
            font-weight: 1000;
            color: #1A1A1A;
            text-shadow: 1px 1px 3px rgba(255,255,255,0.6);
            background-color: rgba(255, 255, 255, 0.6);
            padding: 10px;
            border-radius: 10px;
            display: inline-block;
        ">
            ðŸ¥¦Helloooww welcome at VeggieBites guys!!
        </h1>
        """, 
        unsafe_allow_html=True
    )

    st.markdown("Cari tahu yukk tipe vegetarian kamu yang mana biar kita bisa bantu kasih menu sehat yang sesuai buat kamuu><.")

    pilihan = st.radio(
        "Kamu termasuk tipe vegetarian yang mana nih?",
        [
            "Lacto-ovo (telur & susu masih aku makan sieh)",
            "Lacto (only susu, telur big no no)",
            "Ovo (telur oke sieh, tapi susu ga dulu deh)",
            "Vegan total (no hewani et all)"
        ]
    )
    
    if st.button("Next"):
        st.session_state["page"] = "halaman_2"
    st.markdown('</div>', unsafe_allow_html=True)
        
def halaman_2():
    st.markdown('<div class="card">', unsafe_allow_html=True)
    st.title("Kebutuhan Nutrisi Kamu")
    st.markdown("Sebagai vegetarian, kamu perlu perhatian khusus pada beberapa nutrisi ini loh:")
    st.markdown("""
    - *Protein*: Tempe, tahu, kacang-kacangan, Telur, Biji Chia, Quinoa, Bayam
    - *Zat Besi*: Bayam, Brokoli, Kacang Merah, Buncis, Lentil, Aprikot, Selada Air, Kangkung
    - *Vitamin B12*: Susu Kedelai Fortifikasi, suplemen, Serealia, Nori, Margarin Nabati, Susu, Keju, Yoghurt, Sereal Sarapan (Malt-O-Meal Raisin Bran), Apel, Pisang, Blueberry, Jeruk, Kismis
    - *Kalsium*: Tahu, Almond, Sayur Hijau, Susu Kedelai, Kubis, Okra, Kiwi, Pepaya, Jambu Biji
    - *Omega-3*: Flaxseed, Spirulina, Chlorella, Biji Rami, Kacang Kenari
    """)
    st.markdown("Tenang guys, nanti kita kasih menunya juga kok!")
    col1, col2 = st.columns(2)
    if col1.button("Back"):
        st.session_state.page -= 1
    if col2.button("Next"):
        st.session_state.page += 1
    st.markdown('</div>', unsafe_allow_html=True)

def halaman_3():
   import streamlit as st

# Judul Aplikasi
st.title("Resep Menu Makanan Vegetarian")

# Data resep disimpan dalam dictionary
resep_vegetarian = {
    "Drumstick Vegetarian": {
        "bahan": [
            "100 gram tempe",
            "3 sdm tepung tapioka",
            "Â½ sdt garam",
            "Â½ sdt kaldu jamur",
            "Â¼ sdt lada bubuk",
            "150 ml minyak goreng"
        ],
        "cara": [
            "Potong-potong tempe.",
            "Haluskan tempe dengan chopper.",
            "Campurkan tempe, tepung, garam, kaldu, dan lada, aduk rata.",
            "Bentuk adonan seperti drumstick.",
            "Goreng hingga kecoklatan, angkat dan sajikan."
        ]
    },
    "Gyoza Vegetarian": {
        "bahan": [
            "12 lembar kulit gyoza",
            "100 gram tahu",
            "100 gram jamur kancing",
            "50 gram kol",
            "50 gram daun pre",
            "Â½ sdt garam",
            "1 sdm bawang putih",
            "Â½ sdm kecap asin",
            "1 sdm saus tiram",
            "1 sdm gula pasir",
            "Â¼ sdt lada bubuk",
            "1 sdm tepung maizena",
            "3 sdm minyak wijen",
            "8 sdm air",
            "2 sdm kecap asin",
            "3 sdt gula pasir",
            "3 sdt cuka",
            "Wijen sangrai"
        ],
        "cara": [
            "Hancurkan tahu, campurkan dengan bahan lainnya, aduk rata.",
            "Isi kulit gyoza dengan adonan, lipat dan bentuk.",
            "Panggang gyoza di wajan dengan minyak wijen, tuang air dan tutup.",
            "Masak hingga matang dan sajikan."
        ]
    },
    # Tambahkan resep lainnya sesuai kebutuhan
}

# Search bar
search_query = st.text_input("Cari resep vegetarian (contoh: 'Gyoza')").lower()

# Menampilkan hasil pencarian
if search_query:
    hasil = {nama: data for nama, data in resep_vegetarian.items() if search_query in nama.lower()}
    
    if hasil:
        for nama_menu, data in hasil.items():
            st.subheader(nama_menu)
            st.markdown("**Bahan-bahan:**")
            for item in data["bahan"]:
                st.markdown(f"- {item}")
            st.markdown("**Cara membuat:**")
            for i, langkah in enumerate(data["cara"], 1):
                st.markdown(f"{i}. {langkah}")
            st.markdown("---")
    else:
        st.warning("Resep tidak ditemukan. Coba kata kunci lain.")
else:
    st.info("Silakan masukkan nama resep untuk mencari.")
    st.markdown('</div>', unsafe_allow_html=True)


def halaman_4():
    st.title("Kamu Butuh Pengganti Bahan Karena Ada Yang Enggak Kamu Suka??")
    st.markdown("Masukkan bahan yang mau kamu ganti yaa, nanti kita bantu kasih alternatifnya!")
    st.markdown("Contoh: susu, telur, daging, keju, dll")

    # Simpan hasil di session_state
    if "hasil_pengganti" not in st.session_state:
        st.session_state.hasil_pengganti = ""
    if "bahan_input" not in st.session_state:
        st.session_state.bahan_input = ""

    # Input text biasa
    st.session_state.bahan_input = st.text_input("Masukkan nama bahan yang mau diganti:", value=st.session_state.bahan_input)

    # Tombol Search
    if st.button("Search"):
        bahan = st.session_state.bahan_input.lower()
        pengganti = {
            "susu": "susu almond / oat milk",
            "telur": "chia egg (chia + air)",
            "daging": "jamur, tempe, atau tofu",
            "keju": "keju vegan berbasis kacang",
            "daging sapi": "tempe, tahu, jamur tiram, jackfruit, seitan",
            "daging ayam": "tempe, tahu, jamur tiram, jackfruit, seitan",
            "daging giling": "kacang hitam, kacang merah, walnut cincang, tahu hancur",
            "susu sapi": "susu almond, susu kedelai, oat milk, coconut milk",
            "keju cheddar": "keju vegan, nutritional yeast",
            "parmesan": "nutritional yeast, kacang mete blend",
            "cream cheese": "tahu sutra + lemon + garam (di-blend)",
            "mentega": "minyak kelapa, margarin vegan, alpukat",
            "mayones": "mayones vegan, tofu + mustard + lemon",
        }
        hasil = pengganti.get(bahan, "Bahan yang kamu cari belum ada di daftar. Coba bahan lain yuk!")
        st.session_state.hasil_pengganti = f"Pengganti untuk {bahan}: {hasil}"

    # Tampilkan hasil kalau ada
    if st.session_state.hasil_pengganti:
        st.success(st.session_state.hasil_pengganti)

    # Navigasi tombol
    col1, col2 = st.columns(2)
    with col1:
        if st.button("Back", key="back4"):
            st.session_state.page -= 1
            st.session_state.hasil_pengganti = ""
    with col2:
        if st.button("Next", key="next4"):
            st.session_state.page += 1
            st.session_state.hasil_pengganti = ""
        
def halaman_5():
    st.markdown('<div class="card">', unsafe_allow_html=True)
    st.title("Thank you for visiting our website!!")
    st.markdown("^^Semoga VeggieBites bisa selalu membantumu yaa^^")
    col1, col2 = st.columns(2)
    if col1.button("Back"):
        st.session_state.page -= 1
    st.markdown('</div>', unsafe_allow_html=True)

# ---------- JALANKAN HALAMAN ----------
if "page" not in st.session_state:
    st.session_state.page = 0
    
     halaman_fungsi =[halaman_1, halaman_2, halaman_3, halaman_4, halaman_5]
     halaman_fungsi[st.session_state.page]()
